name: Nest Deployment

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy using ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          script: |
            echo "üöÄ Deploying FPTedu-tic-tac-toe..."
            # ƒêi t·ªõi th∆∞ m·ª•c d·ª± √°n
            cd server-tictactoe || { echo "‚ùå Directory server-tictactoe not found"; exit 1; }
            # B·∫Øt bu·ªôc nh·∫≠n code m·ªõi
            echo "${{ secrets.PASSWORD }}" | sudo -S git fetch origin master || { echo "‚ùå Failed to fetch code"; exit 1; }
            echo "${{ secrets.PASSWORD }}" | sudo -S git reset --hard origin/master || { echo "‚ùå Failed to reset code"; exit 1; }
            # Sao ch√©p .env.example th√†nh .env n·∫øu c·∫ßn
            if [ ! -f .env ] && [ -f .env.example ]; then
              echo "${{ secrets.PASSWORD }}" | sudo -S cp .env.example .env
              echo "‚úÖ Copied .env.example to .env"
            elif [ ! -f .env.example ]; then
              echo "‚ùå .env.example does not exist"
              exit 1
            else
              echo "‚úÖ .env already exists, skipping copy"
            fi
            # X√≥a node_modules v√† c√†i l·∫°i
            echo "${{ secrets.PASSWORD }}" | sudo -S rm -rf node_modules package-lock.json
            echo "${{ secrets.PASSWORD }}" | sudo -S npm install
            # Build ·ª©ng** Build ·ª©ng d·ª•ng
            echo "${{ secrets.PASSWORD }}" | sudo -S npm run build || { echo "‚ùå Build failed"; exit 1; }
            # Kh·ªüi ƒë·ªông l·∫°i ·ª©ng d·ª•ng
            pm2 restart website
            echo "‚úÖ Deployment completed"
