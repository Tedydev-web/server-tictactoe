name: Next Deployment

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy using ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "üöÄ Deploying FPTedu-tic-tac-toe..."
            # ƒêi t·ªõi th∆∞ m·ª•c d·ª± √°n
            cd server-tictactoe || { echo "‚ùå Directory server-tictactoe not found"; exit 1; }
            # C√†i ƒë·∫∑t Node.js v18 n·∫øu ch∆∞a c√≥
            if ! command -v nvm &> /dev/null; then
              curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
              source ~/.bashrc
            fi
            nvm install 18
            nvm use 18
            # B·∫Øt bu·ªôc nh·∫≠n code m·ªõi
            git fetch origin master || { echo "‚ùå Failed to fetch code"; exit 1; }
            git reset --hard origin/master || { echo "‚ùå Failed to reset code"; exit 1; }
            # Sao ch√©p .env.example th√†nh .env n·∫øu c·∫ßn
            if [ ! -f .env ] && [ -f .env.example ]; then
              cp .env.example .env
              echo "‚úÖ Copied .env.example to .env"
            elif [ ! -f .env.example ]; then
              echo "‚ùå .env.example does not exist"
              exit 1
            else
              echo "‚úÖ .env already exists, skipping copy"
            fi
            # Ghi c√°c bi·∫øn m√¥i tr∆∞·ªùng t·ª´ GitHub Secrets v√†o .env
            echo "PORT=3000" >> .env
            echo "ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}" >> .env
            echo "REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}" >> .env
            echo "REFRESH_TOKEN_EXPIRES_IN=7d" >> .env
            # C√†i ƒë·∫∑t PM2 n·∫øu ch∆∞a c√≥
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi
            # X√≥a node_modules v√† c√†i l·∫°i
            rm -rf node_modules package-lock.json
            npm install
            npm install @nestjs/cli@latest
            # Build ·ª©ng** Build ·ª©ng d·ª•ng
            npm run build || { echo "‚ùå Build failed"; exit 1; }
            # Kh·ªüi ƒë·ªông l·∫°i ·ª©ng d·ª•ng
            pm2 restart website || pm2 start --name website npm -- start
            echo "‚úÖ Deployment completed"
